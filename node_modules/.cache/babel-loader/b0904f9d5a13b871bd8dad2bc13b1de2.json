{"ast":null,"code":"import { put, call,\n/*select,*/\ntakeLatest } from 'redux-saga/effects'; //import { push } from 'react-router-redux';\n\nimport { message } from 'antd';\nimport { AuthActions, UserActions } from '../actions';\nimport { signIn } from './api';\nimport * as _ from 'lodash';\n\nfunction* SignInWorker(action) {\n  try {\n    const {\n      data\n    } = yield call(signIn, action.payload);\n    yield put(AuthActions.setAuthInfo(_.pick(data, ['accessToken'])));\n    yield put(UserActions.setUser(_.omit(data, 'accessToken')));\n  } catch (error) {\n    message.error('Failed to login!');\n    console.error(error);\n  }\n}\n/*\nfunction* SignUpWorker(action: Action<ISignUp>) {\n    try {\n        const { data } = yield call(signUp, action.payload);\n\n        yield put(push(signUpSuccessRoute));\n    } catch (error) {\n        message.error('Failed to sign up!');\n        console.error(error);\n    }\n}*/\n\n\n_c = SignInWorker;\nexport default function* watchAuth() {\n  yield takeLatest(AuthActions.Type.SIGN_IN, SignInWorker); //yield takeLatest(AuthActions.Type.SIGN_UP, SignUpWorker);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInWorker\");","map":{"version":3,"sources":["/home/antony/Desktop/iit-site-frontend/src/redux/sagas/auth.ts"],"names":["put","call","takeLatest","message","AuthActions","UserActions","signIn","_","SignInWorker","action","data","payload","setAuthInfo","pick","setUser","omit","error","console","watchAuth","Type","SIGN_IN"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd;AAAoB;AAAYC,UAAhC,QAAmD,oBAAnD,C,CACA;;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,YAAzC;AAGA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;;AAEA,UAAUC,YAAV,CAAuBC,MAAvB,EAA+C;AAC3C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACK,MAAD,EAASG,MAAM,CAACE,OAAhB,CAA3B;AAEA,UAAMX,GAAG,CAACI,WAAW,CAACQ,WAAZ,CAAwBL,CAAC,CAACM,IAAF,CAAOH,IAAP,EAAa,CAAC,aAAD,CAAb,CAAxB,CAAD,CAAT;AACA,UAAMV,GAAG,CAACK,WAAW,CAACS,OAAZ,CAAoBP,CAAC,CAACQ,IAAF,CAAOL,IAAP,EAAa,aAAb,CAApB,CAAD,CAAT;AACH,GALD,CAKE,OAAOM,KAAP,EAAc;AACZb,IAAAA,OAAO,CAACa,KAAR,CAAc,kBAAd;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBUR,Y;AAwBV,eAAe,UAAUU,SAAV,GAAsB;AACjC,QAAMhB,UAAU,CAACE,WAAW,CAACe,IAAZ,CAAiBC,OAAlB,EAA2BZ,YAA3B,CAAhB,CADiC,CAEjC;AACH","sourcesContent":["import { put, call, /*select,*/ takeLatest, } from 'redux-saga/effects';\n//import { push } from 'react-router-redux';\nimport { message } from 'antd';\nimport { AuthActions, UserActions } from '../actions';\nimport { Action } from 'redux-actions';\nimport { ILogin, IAuth, IUser } from '../../types';\nimport { signIn } from './api';\nimport * as _ from 'lodash';\n\nfunction* SignInWorker(action: Action<ILogin>) {\n    try {\n        const { data } = yield call(signIn, action.payload);\n\n        yield put(AuthActions.setAuthInfo(_.pick(data, ['accessToken']) as IAuth));\n        yield put(UserActions.setUser(_.omit(data, 'accessToken') as IUser));\n    } catch (error) {\n        message.error('Failed to login!');\n        console.error(error);\n    }\n}\n\n/*\nfunction* SignUpWorker(action: Action<ISignUp>) {\n    try {\n        const { data } = yield call(signUp, action.payload);\n\n        yield put(push(signUpSuccessRoute));\n    } catch (error) {\n        message.error('Failed to sign up!');\n        console.error(error);\n    }\n}*/\n\nexport default function* watchAuth() {\n    yield takeLatest(AuthActions.Type.SIGN_IN, SignInWorker);\n    //yield takeLatest(AuthActions.Type.SIGN_UP, SignUpWorker);\n}"]},"metadata":{},"sourceType":"module"}